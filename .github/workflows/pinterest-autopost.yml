name: Pinterest Auto Post  automatisch

on:
  schedule:
    - cron: '0 */2 * * *' # Menjalankan setiap 2 jam sekali
  workflow_dispatch: # Tombol untuk menjalankan manual

jobs:
  post-to-pinterest:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Memberi izin untuk commit file
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Generate Content and Post Pin
        env:
          PINTEREST_ACCESS_TOKEN: ${{ secrets.PINTEREST_ACCESS_TOKEN }}
          PINTEREST_BOARD_ID: ${{ secrets.PINTEREST_BOARD_ID }}
        run: |
          import os
          import random
          import json
          import urllib.parse

          # --- 1. Konfigurasi Awal ---
          SPINTEXT = ['Best', 'Easy', 'Quick', 'Delicious', 'Simple', 'Amazing', 'Irresistible', 'Ultimate', 'Flavorful', 'Ideas', 'Yummy']
          INDEX_FILE = 'last_keyword_index.txt'

          # --- 2. Baca Semua File Konten ---
          try:
              with open('domain.txt', 'r') as f:
                  domain = f.read().strip()
              with open('keyword.txt', 'r') as f:
                  keywords = [line.strip() for line in f if line.strip()]
              with open('deskripsi.txt', 'r', encoding='utf-8') as f:
                  descriptions = [desc.strip() for desc in f.read().split('---') if desc.strip()]
          except FileNotFoundError as e:
              print(f"❌ Error: File {e.filename} tidak ditemukan.")
              exit(1)

          if not all([domain, keywords, descriptions]):
              print("❌ Error: Salah satu file (domain, keyword, atau deskripsi) kosong.")
              exit(1)

          # --- 3. Tentukan Kata Kunci Berikutnya (Manajemen Antrian) ---
          try:
              with open(INDEX_FILE, 'r') as f:
                  current_index = int(f.read().strip())
          except (FileNotFoundError, ValueError):
              current_index = 0
          
          if current_index >= len(keywords):
              current_index = 0

          keyword = keywords[current_index]
          next_index = (current_index + 1) % len(keywords)

          # --- 4. Hasilkan Konten Pin ---
          random_prefix = random.choice(SPINTEXT)
          
          # Judul: "Best Cheesecake Recipe"
          title = f"{random_prefix} {keyword}".title()

          # Deskripsi: Acak dari file deskripsi.txt
          description = random.choice(descriptions)

          # Link: "https://domain.com/detail.html?q=cheesecake-recipe"
          url_keyword = keyword.replace(' ', '-').lower()
          link = f"https://{domain}/detail.html?q={url_keyword}"

          # Gambar: Menggunakan URL Bing dengan kata kunci
          encoded_keyword = urllib.parse.quote(keyword)
          image_url = f"https://tse1.mm.bing.net/th?q={random.choice(SPINTEXT)}%20{encoded_keyword}&w=800&h=1200&c=7&rs=1&p=0"

          print(f"📌 Judul: {title}")
          print(f"📝 Deskripsi: {description[:50]}...")
          print(f"🔗 Link: {link}")
          print(f"🖼️ Gambar: {image_url}")
          print(f"🔄 Indeks berikutnya: {next_index}")

          # --- 5. Kirim Permintaan ke Pinterest API ---
          api_url = "https://api.pinterest.com/v5/pins"
          access_token = os.getenv('PINTEREST_ACCESS_TOKEN')
          board_id = os.getenv('PINTEREST_BOARD_ID')

          headers = {
              "Authorization": f"Bearer {access_token}",
              "Content-Type": "application/json"
          }
          payload = {
              "board_id": board_id,
              "title": title,
              "description": description,
              "link": link,
              "media_source": {
                  "source_type": "image_url",
                  "url": image_url
              }
          }

          # Menggunakan perintah curl untuk mengirim data
          json_payload_str = json.dumps(payload)
          curl_command = f"""
          curl --request POST \
               --url {api_url} \
               --header '{headers['Authorization']}' \
               --header '{headers['Content-Type']}' \
               --data '{json_payload_str}' \
               --silent --show-error --fail
          """
          
          print("\n🚀 Memposting ke Pinterest...")
          post_result = os.system(curl_command)

          if post_result != 0:
              print("❌ Gagal memposting ke Pinterest. Periksa Access Token dan Board ID.")
              exit(1)

          print("✅ Berhasil diposting ke Pinterest!")

          # --- 6. Simpan Indeks Berikutnya ke File ---
          with open(INDEX_FILE, 'w') as f:
              f.write(str(next_index))

      - name: Commit Updated Index File
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add last_keyword_index.txt
          # Commit hanya jika ada perubahan
          if git diff --staged --quiet; then
            echo "✅ Tidak ada perubahan indeks, tidak perlu commit."
          else
            git commit -m "chore: Perbarui indeks kata kunci ke baris berikutnya"
            git push
          fi
